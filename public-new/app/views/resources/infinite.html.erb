<a name="main" title="<%= t('internal_links.main') %>"></a>

<div id="main-content" class="row">
  <div class="information col-sm-7">
    <%= render partial: 'shared/idbadge', locals: {:result => @result, :props => { :full => true} } %>
  </div>
  <div class="page_actions col-sm-5 right">
    <%= render partial: 'shared/page_actions', locals: {:record => @result, :title =>  @result.display_string, :url => request.fullpath, :cite => @result.cite } %>
  </div>
</div>

<div class="row">
  <%= render partial: 'shared/breadcrumbs' %>
</div>

<div class="row" id="tabs">
  <div class="col-sm-9 text-center tabbing navbar navbar-default">
    <ul class="tabbing nav nav-pills">
      <li><%= link_to t('actions.collection_overview'), :action => :show %></li>
      <li><a class='active' href='#'><%= t('actions.hierarch') %></a></li>
      <li><%= link_to t('actions.numeric'), :action => :inventory %></li>
    </ul>
  </div>
</div>

<%= javascript_include_tag 'treesync' %>
<%= javascript_include_tag 'infinite_scroll' %>
<%= javascript_include_tag 'largetree' %>

<div class="row" id="tabs">
  <div class="infinite-record-wrapper col-xs-9">
      <div class="infinite-record-container">
          <div class="root">
              <% waypoint_size = 20 %>
              <% @ordered_records.each_slice(waypoint_size).each_with_index do |refs, i| %>
                  <div class="waypoint" data-waypoint-number="<%= i %>" data-waypoint-size=<%= waypoint_size %> data-uris="<%= refs.map {|r| r['ref']}.join(';') %>">&nbsp;</div>
              <% end %>
          </div>
      </div>
  </div>

  <div class="infinite-tree-view largetree-container col-xs-3" id='tree-container'>
  </div>
</div>

<script>

 function BaseRenderer() {
     this.endpointMarkerTemplate = $('<tr class="end-marker" />');

     this.rootTemplate = $('<tr> ' +
                           '  <td class="no-drag-handle"></td>' +
                           '  <td class="title"></td>' +
                           '</tr>');


     this.nodeTemplate = $('<tr> ' +
                           '  <td class="drag-handle"></td>' +
                           '  <td class="title"><span class="indentor"><button class="expandme"><i class="expandme-icon glyphicon glyphicon-chevron-right" /></button></span> </td>' +
                           '</tr>');
 }

 BaseRenderer.prototype.endpoint_marker = function () {
     return this.endpointMarkerTemplate.clone(true);
 }

 BaseRenderer.prototype.get_root_template = function () {
     return this.rootTemplate.clone(false);
 }


 BaseRenderer.prototype.get_node_template = function () {
     return this.nodeTemplate.clone(false);
 };

 function ResourceRenderer() {
     BaseRenderer.call(this);
     this.rootTemplate = $('<tr> ' +
                           '  <td class="no-drag-handle"></td>' +
                           '  <td class="title"></td>' +
                           '  <td class="resource-level"></td>' +
                           '  <td class="resource-type"></td>' +
                           '  <td class="resource-container"></td>' +
                           '</tr>');

     this.nodeTemplate = $('<tr> ' +
                           '  <td class="drag-handle"></td>' +
                           '  <td class="title"><span class="indentor"><button class="expandme"><i class="expandme-icon glyphicon glyphicon-chevron-right" /></button></span> </td>' +
                           '  <td class="resource-level"></td>' +
                           '  <td class="resource-type"></td>' +
                           '  <td class="resource-container"></td>' +
                           '</tr>');
 }

 ResourceRenderer.prototype = Object.create(BaseRenderer.prototype);

 ResourceRenderer.prototype.add_root_columns = function (row, rootNode) {
     row.find('.resource-level').text(rootNode.level).attr('title', rootNode.level);
     row.find('.resource-type').text(rootNode.type).attr('title', rootNode.type);
     row.find('.resource-container').text(rootNode.container).attr('title', rootNode.container);
 }


 ResourceRenderer.prototype.add_node_columns = function (row, node) {
     row.find('.resource-level').text(node.level).attr('title', node.level);
     row.find('.resource-type').text(node.type).attr('title', node.type);
     row.find('.resource-container').text(node.container).attr('title', node.container);
 };

</script>

<script>
// $('.infinite-record-wrapper').css('position', 'relative').css('left', '-200px');

 /* FIXME: Place the tree to the right.  Can we do this with CSS somehow? */
// $('.infinite-tree-view').css('position', 'absolute').css('right', '2em').css('top', $('.infinite-record-wrapper').offset().top);


 var syncer = new TreeSync('<%= params[:rid]%>');
 window.syncer = syncer;

 var scroll = new InfiniteScroll('<%= url_for(:action => :show) %>/infinite',
                                 $('.infinite-record-wrapper'),
                                 <%= @ordered_records.length %>,
                                 function() {
                                     syncer.infiniteScrollIsReady(scroll);
                                 });

 /* NOTE: This just here for debugging... */
 window.scroller = scroll;

 var tree = new LargeTree(new TreeDataSource('<%= url_for(:action => :show) %>/tree'),
                          $('.infinite-tree-view'),
                          '<%= @root_uri %>',
                          true,
                          new ResourceRenderer(),
                          function() {
                              syncer.treeIsReady(tree);
                          },
                          $.noop);

window.tree = tree;
</script>

<script>
  // handle clicks on tree items
  $('.infinite-record-wrapper').on('click', '.infinite-record-record a.record-title', function(event) {
      // update the hash so browser-back returns user to the record they clicked
      var $record = $(this).closest('.infinite-record-record');
      var uri = $record.data('uri');
      var tree_id = TreeIds.uri_to_tree_id(uri);
      location.hash = '#tree::'+tree_id;

      return true;
  });
</script>